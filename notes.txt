curl -X POST \
  'http://127.0.0.1:8000/game' \
  --header 'Content-Type: application/json' \
  --data-raw '{"game":"bNdVkfpQas93", "type":"This or That"}'


curl -X POST \
  'http://127.0.0.1:8000/player' \
  --header 'Content-Type: application/json' \
  --data-raw '{"game":"bNdVkfpQas93", "name":"Timothy"}'

curl -X POST \
  'http://127.0.0.1:8000/play' \
  --header 'Content-Type: application/json' \
  --data-raw '{"game":"bNdVkfpQas93", "name":"Kevin", "ref":"6", "data":"667"}'


curl -X POST \
  'http://127.0.0.1:8000/score' \
  --header 'Content-Type: application/json' \
  --data-raw '{"game":"bNdVkfpQas93", "name":"Kevin", "score":"5"}'

curl -X GET 'http://127.0.0.1:8000/game/rPdVespQas34'

curl -X GET 'http://127.0.0.1:8000/admin' \
  -H "Accept: application/json" \
  -H "Authorization: Bearer akljnv13bvi2vfo0b0bw"

db.games.updateOne(
   { Game: "bNdVkfpQas93" },
   { $push: { Players: { "Name":"Freddy", "Score":0, "Plays": [] } } }
)

db.games.updateOne( { Game: "bNdVkfpQas93", "Players.Name": "Kevin" }, 
{ $push: { "Players.$[el].Plays": { "Ref": "3", "Data": "33" } } }, 
{ arrayFilters: [{ "el.Name": "Kevin" }], new: true })

db.games.updateOne( 
{ Game: "bNdVkfpQas93", "Players.Name": "Kevin" }, 
{ $set: {"Players.$[el].Score": 88}},
{ arrayFilters: [{ "el.Name": "Kevin" }]}
)


MVP
- This or That
  - New Game
    - Create game /game
  - Wait for players /player
  - Items are in front end (Host can start)
  - Wait for players to vote /play
  - Host can end the game - shows who voted for

- 2 Truths and a lie 
  - New Game
    - Create game /game
  - Wait for players /player
  - Host starts a round
  - Wait for players to post items /play {it can be in a json object}
  - Wait for players to vote /play {it can be a json object}


2 Truths and 1 Lie:

POST /game/

Game url created - player can connect (facilitator not automatically added)

POST /player {"game":"yHdVesGhsN34", "name":"Timothy"} -> WS conn opened - Register player to game

WS /joined {"name":"Timothy"} (Srv -> Plyr)

GET /game/yHdVesGhsN34

POST /action {"game":"yHdVesGhsN34", "action":"start"}

WS /started {} (Srv -> Plyr) Redirect to page

POST /play   {"game":"yHdVesGhsN34", "name":"Kevin", "true1":"zzzzzz", "true2":"yyyyyyyy", "false1":"xxxxxxx"}
// Makes sense to use WS for this too

WS /voted {"name":"Timothy"} (Srv -> Plyr)

POST /action {"game":"yHdVesGhsN34", "action":"all_played"}

WS /all_played {} (Srv -> Plyr) Redirect to page

GUESS:

WS /player_guess {"name":"Timothy"} (Srv -> Plyr)

WS /lie {"lie_guess":2} (Plyr -> Svr)

WS /voted {"name":"Timothy"} (Srv -> Plyr)

POST /action {"game":"yHdVesGhsN34", "action":"all_voted"}

WS /votes {[{"name":"Timothy", "lie_guess":2},{"name":"Dick", "lie_guess":1}], "lie":2} (Srv -> Plyr)

POST /action {"game":"yHdVesGhsN34", "action":"next_player"}

goto GUESS

WS /scoreboard {[{"name":"Timothy", "score":2},{"name":"Dick", "score":1}]}  (Srv -> Plyr) Reduect to pages
 
